import sys
import traceback

from claude_here.debugger import collect_stack_info, collect_exc_info
from claude_here.launcher import launch_claude


def breakpointhook(just_gather_info=False, **kwargs):
    """Claude breakpoint handler."""
    collect_stack_info(stack_level=2)
    if not just_gather_info:
        launch_claude(**kwargs)
        input("Press Enter when you're done talking with Claude to continue to the next breakpoint.")


EXTRA_RECURSION_LIMIT = 100


def excepthook(exc_type, exc_val, exc_tb):
    """Claude exception handler."""
    # if we're recovering from a RecursionError, we'll need some extra stack
    sys.setrecursionlimit(sys.getrecursionlimit() + EXTRA_RECURSION_LIMIT)
    collect_exc_info(exc_type, exc_val, exc_tb)
    traceback.print_exception(exc_type, exc_val, exc_tb)
    launch_claude()


def set_claude_here_breakpoint(on=True):
    """Set breakpoint() to collect info and launch Claude."""
    if on:
        sys.breakpointhook = breakpointhook
    else:
        sys.breakpointhook = sys.__breakpointhook__


def set_claude_here_excepthook(on=True):
    """Configure uncaught exceptions to launch Claude."""
    if on:
        sys.excepthook = excepthook
    else:
        sys.excepthook = sys.__excepthook__
